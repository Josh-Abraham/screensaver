{"version":3,"sources":["constants/index.js","DropdownSelect/DropdownSelect.js","DropdownSelect/index.js","MultiSelect/index.js","MultiSelect/MultiSelect.js","Close Waterfall.mp3","Distant Waterfall.mp3","Fire.mp3","Rain.mp3","Stream.mp3","Summer Night.mp3","Waves.mp3","SoundComponent/index.js","SoundComponent/SoundComponent.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","type","primary","main","secondary","DropdownSelect","props","handleChange","bind","this","dropdownOptions","map","value","MenuItem","id","e","newSelection","target","menuOptions","createMenuItems","className","ThemeProvider","FormControl","InputLabel","dropdownName","color","style","Select","currentSelection","onChange","Component","defaultProps","MultiSelect","console","log","soundSelections","labelId","multiple","input","Input","renderValue","selected","join","sounds","sound","Checkbox","checked","indexOf","ListItemText","SoundComponent","playing","Sound","status","PLAYING","PAUSED","url","soundFile","playStatus","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","loop","autoLoad","backgroundJSONOptions","backgroundOptions","soundOptions","soundJSONOptions","closeWaterfallSound","distantWaterfallSound","fireSound","rainSound","streamSound","summerNightSound","wavesSound","Main","state","background","backgroundURL","play","selectedSounds","pause","handleBackgroundDropdown","handleSoundChange","getSoundComponents","setState","index","newList","splice","push","soundData","backgroundDropdown","getDropDown","soundSelect","getMultiSelect","currentSounds","width","height","controls","muted","onPause","onPlay","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fb3dfdf.chunk.js","sourcesContent":["import { unstable_createMuiStrictModeTheme as createMuiTheme  } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: '#ffffff',\r\n    },\r\n    secondary: {\r\n      main: '#b9f6ca',\r\n    },\r\n  }\r\n});\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\nimport Proptypes from 'prop-types';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport './DropdownSelect.scss';\r\nimport { theme } from '../constants';\r\n\r\nclass DropdownSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  createMenuItems(){\r\n    const options = this.props.dropdownOptions.map((value) =>\r\n      {\r\n        const menuItem =\r\n          <MenuItem\r\n            id={value}\r\n            key={value}\r\n            value={value}\r\n           >{`${value}`}\r\n          </MenuItem>\r\n          return menuItem;\r\n      }\r\n    );\r\n    return options;\r\n  }\r\n\r\n  handleChange(e) {\r\n    const newSelection = e.target.value;\r\n    this.props.handleChange(newSelection)\r\n  }\r\n\r\n  render() {\r\n    const menuOptions = this.createMenuItems();\r\n    return(\r\n      <div  className='dropdownWrapper'>\r\n        <ThemeProvider theme={theme}>\r\n          <FormControl className='dropdownSelect'>\r\n            <InputLabel id={`Dropdown_${this.props.dropdownName}`} color=\"primary\"\r\n            style={{\"fontSize\": '16px'}}\r\n            >\r\n                {this.props.dropdownName}\r\n            </InputLabel>\r\n          <Select\r\n            id={`Dropdown_Select_${this.props.dropdownName}`}\r\n            value={this.props.currentSelection}\r\n            onChange={this.handleChange}\r\n          >\r\n          {menuOptions}\r\n          </Select>\r\n        </FormControl>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDropdownSelect.defaultProps = {\r\n  dropdownOptions: [],\r\n  dropdownName: '',\r\n}\r\n\r\nDropdownSelect.propTypes = {\r\n dropdownOptions: Proptypes.array,\r\n dropdownName: Proptypes.string,\r\n handleChange: Proptypes.func.isRequired,\r\n currentSelection: Proptypes.string.isRequired\r\n}\r\n\r\nexport default DropdownSelect;\r\n","import DropdownSelect from './DropdownSelect.js';\r\n\r\nexport default DropdownSelect;\r\n","import MultiSelect from './MultiSelect.js';\r\n\r\nexport default MultiSelect;\r\n","import React, { Component } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Proptypes from 'prop-types';\r\nimport { theme } from '../constants';\r\nimport './MultiSelect.scss'\r\n\r\n\r\n\r\n\r\nclass MultiSelect extends Component {\r\n  \r\n  render() {\r\n    console.log(this.props.soundSelections)\r\n\r\n    return (\r\n      <div className='outerMultiWrap'>\r\n        <ThemeProvider theme={theme}>\r\n        <FormControl className='multiSelectWrapper'>\r\n          <InputLabel \r\n            id=\"demo-mutiple-checkbox-label\"\r\n            style={{'fontSize': '16px'}}\r\n            >Background Sounds</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-checkbox-label\"\r\n            id=\"demo-mutiple-checkbox\"\r\n            multiple\r\n            value={[]}\r\n            onChange={this.props.handleChange}\r\n            input={<Input />}\r\n            renderValue={(selected) => selected.join(', ')}\r\n            \r\n          >\r\n            {this.props.sounds.map((sound) => (\r\n              <MenuItem key={sound} value={sound}>\r\n                <Checkbox checked={this.props.soundSelections.indexOf(sound) > -1} />\r\n                <ListItemText primary={sound} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMultiSelect.propTypes = {\r\n  sounds: Proptypes.array,\r\n  soundSelections: Proptypes.array,\r\n  handleChange: Proptypes.func.isRequired\r\n }\r\n\r\nexport default MultiSelect;","export default __webpack_public_path__ + \"static/media/Close Waterfall.6c23fa93.mp3\";","export default __webpack_public_path__ + \"static/media/Distant Waterfall.0fd6e9ec.mp3\";","export default __webpack_public_path__ + \"static/media/Fire.f4c6f4c6.mp3\";","export default __webpack_public_path__ + \"static/media/Rain.b5c3b1ed.mp3\";","export default __webpack_public_path__ + \"static/media/Stream.64c0fd5e.mp3\";","export default __webpack_public_path__ + \"static/media/Summer Night.ae7ba899.mp3\";","export default __webpack_public_path__ + \"static/media/Waves.264674d5.mp3\";","import SoundComponent from './SoundComponent.js';\r\n\r\nexport default SoundComponent;\r\n","import React, { Component } from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport Sound from 'react-sound'\r\n\r\nclass SoundComponent extends Component {\r\n  render() {\r\n    const playing = this.props.playing ? Sound.status.PLAYING : Sound.status.PAUSED\r\n    return(\r\n      <Sound\r\n      url={this.props.soundFile}\r\n      playStatus={playing}\r\n      onLoading={this.handleSongLoading}\r\n      onPlaying={this.handleSongPlaying}\r\n      onFinishedPlaying={this.handleSongFinishedPlaying}\r\n      loop={true}\r\n      autoLoad={true}\r\n    />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nSoundComponent.propTypes = {\r\n soundFile: Proptypes.object.isRequired\r\n}\r\n\r\nexport default SoundComponent;\r\n","import React, { Component } from 'react';\r\nimport DropdownSelect from './DropdownSelect';\r\nimport MultiSelect from './MultiSelect'\r\nimport './Main.scss';\r\nimport closeWaterfallSound from './Close Waterfall.mp3';\r\nimport distantWaterfallSound from './Distant Waterfall.mp3';\r\nimport fireSound from './Fire.mp3';\r\nimport rainSound from './Rain.mp3'\r\nimport streamSound from './Stream.mp3'\r\nimport summerNightSound from './Summer Night.mp3';\r\nimport wavesSound from './Waves.mp3';\r\nimport SoundComponent from './SoundComponent'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst backgroundJSONOptions = {\r\n    'Autumn Forest': 'https://youtu.be/TOHYkccYfUk?t=23',\r\n    'Beach Bonfire': 'https://youtu.be/Y1y9GAjuSt8?t=24',\r\n    'Christmas Fireplace': 'https://www.youtube.com/watch?v=x7M4oU2HdFE',\r\n    'Kiss Goodnight': 'https://www.youtube.com/watch?v=QqGjuloQGgo',\r\n    'Rainforest': 'https://www.youtube.com/watch?v=8myYyMg1fFE',\r\n    'Tropical Beach': 'https://www.youtube.com/watch?v=DGIXT7ce3vQ',\r\n    'Winter Fireplace': 'https://www.youtube.com/watch?v=oakA7RLvmWs'\r\n}\r\n\r\nconst backgroundOptions = ['Autumn Forest', 'Beach Bonfire', 'Christmas Fireplace', 'Kiss Goodnight', 'Rainforest', 'Tropical Beach', 'Winter Fireplace']\r\nconst soundOptions = ['Close Waterfall', 'Distant Waterfall', 'Fire', 'Rain', 'Stream', 'Summer Night', 'Waves']\r\n\r\nconst soundJSONOptions = {\r\n  'Close Waterfall': closeWaterfallSound,\r\n  'Distant Waterfall': distantWaterfallSound,\r\n  'Fire': fireSound,\r\n  'Rain': rainSound,\r\n  'Stream': streamSound,\r\n  'Summer Night': summerNightSound,\r\n  'Waves': wavesSound\r\n}\r\n\r\nclass Main extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      background: '',\r\n      backgroundURL: '',\r\n      play: true,\r\n      selectedSounds: []\r\n    }\r\n    this.play = this.play.bind(this)\r\n    this.pause = this.pause.bind(this)\r\n    this.handleBackgroundDropdown = this.handleBackgroundDropdown.bind(this)\r\n    this.handleSoundChange = this.handleSoundChange.bind(this)\r\n    this.getSoundComponents = this.getSoundComponents.bind(this)\r\n  }\r\n\r\n\r\n  // fetchSounds()\r\n\r\n  getDropDown() {\r\n    return (\r\n      <DropdownSelect\r\n        id='dropdownAddRecipe'\r\n        dropdownOptions={backgroundOptions}\r\n        dropdownName='Select Background'\r\n        handleChange={this.handleBackgroundDropdown}\r\n        currentSelection={this.state.background}\r\n      />\r\n    )\r\n  }\r\n\r\n  handleBackgroundDropdown(newSelection) {\r\n    this.setState({\r\n      background: newSelection,\r\n      backgroundURL: backgroundJSONOptions[newSelection]\r\n    })\r\n  }\r\n\r\n  getMultiSelect() {\r\n    return (\r\n      <MultiSelect\r\n        id='dropdownAddRecipe'\r\n        sounds={soundOptions}\r\n        dropdownName='Select Background'\r\n        soundSelections={this.state.selectedSounds}\r\n        handleChange={this.handleSoundChange}\r\n      />\r\n    )\r\n  }\r\n\r\n  handleSoundChange(e) {\r\n    const newSelection = e.target.value[0];\r\n    const index = this.state.selectedSounds.indexOf(newSelection);\r\n    const newList = [...this.state.selectedSounds]\r\n    if (index > -1) {\r\n      newList.splice(index, 1);\r\n    } else {\r\n      newList.push(newSelection)\r\n    }\r\n    this.setState({\r\n      selectedSounds: newList\r\n    })\r\n  }\r\n\r\n  pause() {\r\n    this.setState({\r\n      play: false\r\n    })\r\n  }\r\n\r\n  play() {\r\n    this.setState({\r\n      play: true\r\n    })\r\n  }\r\n\r\n  getSoundComponents() {\r\n    const sounds = this.state.selectedSounds.map((soundData) => {\r\n      return (\r\n        <SoundComponent\r\n            soundFile={soundJSONOptions[soundData]}\r\n            playing={this.state.play}\r\n          />\r\n      );\r\n    })\r\n\r\n    return sounds\r\n  }\r\n\r\n  render() {\r\n    const backgroundDropdown = this.getDropDown()\r\n    const soundSelect = this.getMultiSelect()\r\n    const currentSounds = this.getSoundComponents();\r\n\r\n    return (\r\n      <div className='outerWrapper'>\r\n\r\n        <div className='videoWrapper'>\r\n          <ReactPlayer\r\n            url={this.state.backgroundURL}\r\n            width=\"1620px\"\r\n            height=\"1200px\"\r\n            controls={false}\r\n            muted={true}\r\n            playing={true}\r\n            onPause={this.pause}\r\n            onPlay={this.play}\r\n          />\r\n          {currentSounds}\r\n        </div>\r\n        <div className='playerOptions'>\r\n        <div className='playerTitle'>\r\n            Hygge Time\r\n          </div>\r\n          {backgroundDropdown}\r\n          {soundSelect}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import './App.css';\nimport Main from './Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}